{
  "configs":[
    {
      "id": "host",
      "label": {"en": "IP or host name of Hue bridge"},
      "val_t": "string",
      "ui": {
        "type": "input_string"
      },
      "val": {
        "default": ""
      },
      "is_required": true,
      "config_point": "any"
    },
    {
      "id": "bridge_id",
      "label": {"en": "Bridge id"},
      "val_t": "string",
      "ui": {
        "type": "input_string"
      },
      "val": {
        "default": ""
      },
      "is_required": true,
      "config_point": "any"
    },
    {
      "id": "connection_state",
      "label": {"en": "State"},
      "val_t": "string",
      "ui": {
        "type": "text"
      },
      "val": {
        "default": ""
      },
      "is_required": true,
      "config_point": "any"
    },
    {
      "id": "errors",
      "label": {"en": "Errors"},
      "val_t": "string",
      "ui": {
        "type": "text_error"
      },
      "val": {
        "default": ""
      },
      "is_required": true,
      "config_point": "any"
    },
    {
      "id": "discovered_bridges",
      "label": {"en": "List of discovered bridges"},
      "val_t": "string",
      "ui": {
        "type": "input_readonly"
      },
      "val": {
        "default": ""
      },
      "is_required": true,
      "config_point": "any"
    },
    {
      "id": "dimmer_range_mode",
      "label": {"en": "Dimmer mode "},
      "val_t": "str_map",
      "ui": {
        "type": "select_horizontal",
        "select": [{"val": "100","label": {"en": "Range 0-100"}},{"val": "255","label": {"en": "Range 0-255"}}]
      },
      "val": {
        "default": "255"
      },
      "is_required": true,
      "config_point": "init"
    }
  ],
  "ui_buttons": [
    {
      "id":"connect",
      "label": {"en": "Connect"},
      "req": {
        "serv":"hue",
        "intf_t": "cmd.bridge.connect",
        "val": ""
      },
      "hidden": false
    }, {
      "id":"disconnect",
      "label": {"en": "Disconnect"},
      "req": {
        "serv":"hue",
        "intf_t": "cmd.bridge.disconnect",
        "val": ""
      },
      "hidden": false
    },{
      "id":"sync",
      "label": {"en": "Re-sync devices"},
      "req": {
        "serv":"hue",
        "intf_t": "cmd.system.sync",
        "val": ""
      },
      "hidden": false
    },{
      "id":"discover",
      "label": {"en": "Discover Hue bridge"},
      "req": {
        "serv":"hue",
        "intf_t": "cmd.bridge.discover",
        "val": ""
      },
      "hidden": false
    }

  ],
  "ui_blocks": [
    {
      "id":"connect",
      "header": {"en": "Hue bridge connection"},
      "text": {"en": "Press HUE link button right before connecting to the bridge"},
      "configs": ["host","bridge_id","connection_state","errors"],
      "buttons": ["connect","disconnect"],
      "footer": {"en": ""}
    },
    {
      "id":"discover",
      "header": {"en": "Discover HUE bridge "},
      "text": {"en": "The app will try to discover new bridge"},
      "configs": ["discovered_bridges"],
      "buttons": ["discover"],
      "footer": {"en": ""}
    },
    {
      "id": "settings",
      "header": {"en": "App settings "},
      "text": {"en": ""},
      "configs": ["dimmer_range_mode"],
      "buttons": ["sync"],
      "footer": {"en": ""}
    }
  ],
  "auth": {
    "type": "",
    "redirect_url": "",
    "client_id": "",
    "partner_id": "",
    "auth_endpoint": ""
  },
  "init_flow":["connect"],
  "services": [
    {
      "name": "hue",
      "alias": "Network managment",
      "address": "/rt:ad/rn:hue/ad:1",
      "interfaces": [
        {
          "intf_t": "in",
          "msg_t": "cmd.app.get_manifest",
          "val_t": "null",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.system.sync",
          "val_t": "null",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.system.reconnect",
          "val_t": "null",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.app.manifest_report",
          "val_t": "object",
          "ver": "1"
        },{
          "intf_t": "out",
          "msg_t": "cmd.app.get_full_state",
          "val_t": "string",
          "ver": "1"
        },{
          "intf_t": "out",
          "msg_t": "cmd.app.full_state_report",
          "val_t": "object",
          "ver": "1"
        },{
          "intf_t": "in",
          "msg_t": "cmd.config.extended_set",
          "val_t": "str_map",
          "ver": "1"
        },{
          "intf_t": "in",
          "msg_t": "cmd.auth.set_tokens",
          "val_t": "str_map",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.auth.login_report",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.network.get_all_nodes",
          "val_t": "null",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.thing.get_inclusion_report",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.thing.inclusion",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.thing.delete",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.thing.inclusion_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.thing.exclusion_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.network.all_nodes_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.log.set_level",
          "val_t": "string",
          "ver": "1"
        }
      ]
    }
  ],
  "app_state": {

  }
}